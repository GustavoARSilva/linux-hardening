930729f56e50 ipc/sem.c: replace kvmalloc/memset with kvzalloc and use struct_size
9cd5e146a0cb kernel/gcov/gcc_3_4.c: use struct_size() in kzalloc()
809ca6c8b582 rapidio/mport_cdev: mark expected switch fall-through
3f3c6789bab5 lib/assoc_array.c: mark expected switch fall-through
2ad4142c4b53 mm/swapfile.c: use struct_size() in kvzalloc()
e16a5ab715a3 mm/memcontrol.c: use struct_size() in kmalloc()
2a440b061b8d ocfs2: Use zero-sized array and struct_size() in kzalloc()
2648624cfe7f adfs: mark expected switch fall-throughs
98a629f44ac3 scsi: st: mark expected switch fall-throughs
d83ca8bef5ae scsi: qla4xxx: ql4_os: mark expected switch fall-through
750e900dde93 scsi: esas2r: esas2r_init: mark expected switch fall-throughs
f0ed2270e0bc scsi: bfa: bfa_ioc: Mark expected switch fall-throughs
e14bcc5df788 scsi: bfa: bfa_fcs_rport: Mark expected switch fall-throughs
dd12f6f1c237 scsi: bfa: bfa_fcs_lport: Mark expected switch fall-throughs
f3be8626ce6f scsi: aic7xxx: aic79xx: mark expected switch fall-through
d2832376b69e dm switch: use struct_size() in kzalloc()
6b41d4d9cb8f libceph: use struct_size() for kmalloc() in crush_decode()
1f7ae812f87e x86/syscalls: Mark expected switch fall-throughs
5ac767a3c402 ASN.1: mark expected switch fall-through
42559d0ee6f5 lib/cmdline.c: mark expected switch fall-throughs
8effe37d2f58 lib: zstd: Mark expected switch fall-throughs
9ba343caeebc scsi: sym53c8xx_2: sym_nvram: Mark expected switch fall-through
2758cbd62233 scsi: sym53c8xx_2: sym_hipd: mark expected switch fall-throughs
a571e5dc51a1 scsi: ppa: mark expected switch fall-through
087f3e62d488 scsi: osst: mark expected switch fall-throughs
b4a94194b0bf scsi: lpfc: lpfc_scsi: Mark expected switch fall-throughs
79c1d97e905a scsi: lpfc: lpfc_nvme: Mark expected switch fall-through
5a41df13acbb scsi: lpfc: lpfc_nportdisc: Mark expected switch fall-through
c88a7a0445f8 scsi: lpfc: lpfc_hbadisc: Mark expected switch fall-throughs
18946aa551cf scsi: lpfc: lpfc_els: Mark expected switch fall-throughs
220dadf8cd23 scsi: lpfc: lpfc_ct: Mark expected switch fall-throughs
2d5025260c82 scsi: imm: mark expected switch fall-throughs
6a1409b9f261 scsi: csiostor: csio_wr: mark expected switch fall-through
0c75d9ae143a scsi: bfa: bfa_fcpim: Mark expected switch fall-throughs
e1890f809537 scsi: be2iscsi: be_main: Mark expected switch fall-through
618d118f1e21 scsi: be2iscsi: be_iscsi: Mark expected switch fall-through
491d3a37392b scsi: aic7xxx: mark expected switch fall-throughs
282dd6ace5e0 fs: mark expected switch fall-throughs
102cefc8e879 ASoC: ab8500: Mark expected switch fall-through
458c8961c194 watchdog: w83877f_wdt: Mark expected switch fall-through
e70d3547fc44 watchdog: sc520_wdt: Mark expected switch fall-through
3612b87d181b watchdog: sbc60xxwdt: Mark expected switch fall-through
4a1b1161561e watchdog: smsc37b787_wdt: Mark expected switch fall-through
51c802f57a0c watchdog: sc1200: Mark expected switch fall-through
8baee57218f6 watchdog: pc87413: Mark expected switch fall-through
988bb4a1937b i3c: master: dw-i3c-master: mark expected switch fall-through
91e14842f8ea crypto: af_alg - use struct_size() in sock_kfree_s()
d89ea4acfc03 net: hns: use struct_size() in devm_kzalloc()
9d49fff91b85 virt: vbox: Mark expected switch fall-through
b304da7025d7 misc: mic/scif: mark expected switch fall-through
7850b51b6c21 scsi: mpt3sas: Add missing breaks in switch statements
5e420fe63581 scsi: aacraid: Fix missing break in switch statement
401c9bd10bee hpet: Use struct_size() in kzalloc()
97b047e72bd6 regulator: da9062: Use struct_size() in devm_kzalloc()
d56f00fd5380 tty: hvc_xen: Mark expected switch fall-through
3e913eebdfbb tty: n_gsm: Mark expected switch fall-throughs
4a67e5d4adbf Bluetooth: mgmt: Use struct_size() helper
78844068a7b9 mlxsw: spectrum: acl: Use struct_size() in kzalloc()
e9d6a371cff3 mmc: sdhci-xenon: Fixup already marked switch fall-through
6d20faecc594 isdn_common: Mark expected switch fall-throughs
09186e503486 security: mark expected switch fall-throughs and add a missing break
ac227fb5bc95 regulator: da9063: Use struct_size() in devm_kzalloc()
b5be853181a8 crypto: ccree - fix missing break in switch statement
0612fe604d86 clk: samsung: s3c2443: Mark expected switch fall-through
7264235ee74f IB/hfi1: Add missing break in switch statement
8d86f6b4306f intel_th: Mark expected switch fall-throughs
90952cd38859 kvm: Use struct_size() in kmalloc()
6b367c9f88b0 iwlwifi: nvm-parse: use struct_size() in kzalloc()
9178aa7c4654 iwlwifi: eeprom-parse: use struct_size() in kzalloc()
9b6872a12386 HID: roccat: Mark expected switch fall-through
966b2217d2b9 drm/nouveau: mark expected switch fall-through
bcb35dad1d31 drm/amd/powerplay/smu10_hwmgr: use struct_size() in kzalloc()
7f5725f98025 drm/amd/powerplay/smu8_hwmgr: use struct_size() in kzalloc()
cc5034a5d293 drm/radeon/evergreen_cs: fix missing break in switch statement
01bdf01c7ba8 usb: wusbcore: wa-xfer: use struct_size() helper
5ebf5c890324 usb: core: config: Use struct_size() in kzalloc()
eeca7606dd6e usb: dwc2: use struct_size() in kzalloc()
3623d4defff0 staging: vt6656: key: Mark expected switch fall-throughs
2f54a0412f31 drm/amdgpu/si_dpm: Mark expected switch fall-throughs
ecdadace81f2 drm/radeon/ci_dpm: Mark expected switch fall-throughs
e38545908afb drm/amd/powerplay/smu7_hwmgr: Mark expected switch fall-throughs
c81e5efeec48 drm/amd/display/dce_mem_input: Mark expected switch fall-through
8328691d3b88 drm/radeon/si_dpm: Mark expected switch fall-throughs
7ac65f42769f drm/amd/display/dc/bios_parser2: Mark expected switch fall-throughs
e4e6c0b0ad79 hwmon: (f71882fg) Mark expected switch fall-through
c947e51cf803 hwmon: (adt7462) Mark expected switch fall-throughs
3c97ce1f8685 Bluetooth: a2mp: Use struct_size() helper
16e183423f1a Bluetooth: hci_event: Use struct_size() helper
d2d833e0bf2b mfd: mxs-lradc: Mark expected switch fall-through
efac6c75dc4b xen-scsiback: mark expected switch fall-through
c9f19b67f04c xen: mark expected switch fall-through
4e116e93f4fb Input: db9 - mark expected switch fall-through
1da92d436c93 HID: wacom: Mark expected switch fall-through
361bf8a9d88d tty/n_hdlc: mark expected switch fall-through
ca5dc2d11787 char: lp: mark expected switch fall-through
479826cc8611 staging: comedi: ni_660x: fix missing break in switch statement
d2fce701751f USB: musb: mark expected switch fall-through
5340f23df8fe gpio: sprd: Add missing break in switch statement
131d34cb0795 audit: mark expected switch fall-through
b67de691f60b isdn_v110: mark expected switch fall-through
56e9b6b9601c isdn: i4l: isdn_tty: Mark expected switch fall-through
b6cd7dd99a89 ser_gigaset: mark expected switch fall-through
6ca64ef37da9 netfilter: xt_recent: Use struct_size() in kvzalloc()
6fde9df6b76e ipvs: Use struct_size() helper
439bb9edd430 ixgbe: Use struct_size() helper
196d7311fab5 igc: Use struct_size() helper
a0feac18b8b5 igb: use struct_size() helper
9a00536c38e9 fm10k: use struct_size() in kzalloc()
af6f12f22b14 nfp: flower: cmsg: use struct_size() helper
9e475293cd40 mlxsw: spectrum_router: Use struct_size() in kzalloc()
370600afdd2e bnx2x: Use struct_size() in kzalloc()
13644be211bf wimax/i2400m: use struct_size() helper
a3deec5b3f13 wan: wanxl: use struct_size() in kzalloc()
fd6d12267805 net: usb: cdc-phonet: use struct_size() in alloc_netdev()
33b363e004fd net: dsa: use struct_size() in devm_kzalloc()
b4ba9354cc30 mpls_iptunnel: use struct_size() helper
8fe5756c7382 net/sched: use struct_size() helper
4154b567b6d1 bridge: use struct_size() helper
7499a288bf1a xen-netback: mark expected switch fall-through
671f2f968135 net: wimax/i2400m: mark expected switch fall-through
1323f75fba73 net: fddi: skfp: Mark expected switch fall-through
0d156a371542 net: usb: rtl8150: mark expected switch fall-through
209d6e7b47e3 net: usb: pegasus: Mark expected switch fall-through
2067458cf674 net: appletalk: cops: mark expected switch fall-through
a9b6d9ef0965 veth: Mark expected switch fall-throughs
9f208eca4f2f mfd: sm501: Use struct_size() in devm_kzalloc()
ae7b8eda27b3 mfd: sm501: Fix potential NULL pointer dereference
1eb6ea4a8202 drm/vc4: Use struct_size() in kzalloc()
14cfbd94998a svcrdma: Use struct_size() in kmalloc()
7b30196534c9 mtd: rawnand: marvell: use struct_size() in devm_kzalloc()
f1e5b6239bdd md-linear: use struct_size() in kzalloc()
489338a717a0 perf tests evsel-tp-sched: Fix bitwise operator
1f533ba6d50d ipv4: fib: use struct_size() in kzalloc()
ee69804714e2 nfp: use struct_size() in kzalloc()
6541d025906b tulip: eeprom: use struct_size() in kmalloc()
c49f0ce0b692 cxgb4: smt: use struct_size() in kvzalloc()
3ebb18a48cbf cxgb4: sched: use struct_size() in kvzalloc()
db040dfa53e2 qtnfmac: use struct_size() in kzalloc()
bd4d73a1dbc1 drm/savage: mark expected switch fall-throughs
88c12a0211d2 drm/via: mark expected switch fall-throughs
1575c083a78c tty: serial: 8250_mtk: Fix potential NULL pointer dereference
75b710af7139 timers: Mark expected switch fall-throughs
c829f5f52db9 cxgb4: cxgb4_tc_u32: use struct_size() in kvzalloc()
9f672984338d cxgb4: clip_tbl: Use struct_size() in kvzalloc()
2f10d8237396 drm/amd/powerplay: Fix missing break in switch
2b0fc3742bc7 x86/events: Mark expected switch-case fall-throughs
07c69f1148da usb: gadget: udc: net2272: Fix bitwise and boolean operations
6fcebf1302b4 x86/kernel: Mark expected switch-case fall-throughs
89da3446294a x86/insn-eval: Mark expected switch-case fall-through
fe96b99dc72b drm/amdgpu: Replace kzalloc with kcalloc
b2869f28e147 KVM: x86: Mark expected switch fall-throughs
4af217500e7f cfg80211: mark expected switch fall-throughs
26880dc87719 drm/nouveau/nvkm: mark expected switch fall-throughs
ee58c3045d82 afs: Mark expected switch fall-throughs
921e88a4f964 clk: imx: imx7ulp: use struct_size() in kzalloc()
6317950c1b9c Bluetooth: Mark expected switch fall-throughs
482dcf7df7e9 net/mlx4: Mark expected switch fall-through
ed35da4fce1d qed: Mark expected switch fall-through
9536d6ed156f bna: Mark expected switch fall-throughs
015496c43f39 broadcom: Mark expected switch fall-throughs
d422a286e181 net: 3c509: mark expected switch fall-throughs
f79e3365bc1f tipc: mark expected switch fall-throughs
a7102c746179 ipmi: msghandler: Fix potential Spectre v1 vulnerabilities
3bbe8b1a4ae9 9p: mark expected switch fall-through
d7ac3c6ef5d8 applicom: Fix potential Spectre v1 vulnerabilities
48b02a85fe2e dmaengine: axi-dmac: Use struct_size() in kzalloc()
3c215fd868dd dmaengine: timb_dma: Use struct_size() in kzalloc()
863326a6eec9 dmaengine: tegra210-adma: Use struct_size() in devm_kzalloc()
701956d4018e char/mwave: fix potential Spectre v1 vulnerability
e3575c1201f0 misc: enclosure: Use struct_size() in kzalloc()
e25df7812c91 misc: ibmvsm: Fix potential NULL pointer dereference
6041828fdae0 uwb: use struct_size() in kzalloc()
da79ff6e586b xhci: Use struct_size() in kzalloc()
c6ac875446f9 s390/hypfs: Use struct_size() in kzalloc()
4559dd248297 net: hns: Use struct_size() in devm_kzalloc()
78c787c21f97 cxgb4/l2t: Use struct_size() in kvzalloc()
c5c3899de09e openvswitch: meter: Use struct_size() in kzalloc()
bb3e16ad8b17 net, decnet: use struct_size() in kzalloc()
faa311e950e3 mlxsw: spectrum_nve: Use struct_size() in kzalloc()
2285ec872d9d mlxsw: spectrum_acl_bloom_filter: use struct_size() in kzalloc()
2bc217c61685 x86/platform/UV: Replace kmalloc() and memset() with k[cz]alloc() calls
8e8aa1454205 RDMA/mlx5: Replace kzalloc with kcalloc
4944514e6c7e cpufreq: e_powersaver: Use struct_size() in kzalloc()
2037f9d8c242 mtd: lpddr: Use struct_size() in kzalloc()
04b4c06caf2b mtd: cfi: cmdset_0001: Use struct_size() in kmalloc()
9cb76a6aa1a9 mtd: gen_probe: Use struct_size() in kmalloc()
4cb79ef9c6c4 ASoC: amd: Fix potential NULL pointer dereference
060d0bf49187 ASoC: rt5514-spi: Fix potential NULL pointer dereference
fe2570fbf3df staging: wilc1000: fix memory leak in wilc_add_rx_gtk
891fd847605d staging: rtl8188eu: Replace kzalloc with kcalloc
0855c9c9ec28 drm/amdgpu_vm: fix boolean expressions
66f92bcff0f9 drm/amd/display: Fix boolean expression in get_surf_rq_param
00def7130af8 powerpc/spufs: use struct_size() in kmalloc()
31367b9a01d6 powerpc/ps3: Use struct_size() in kzalloc()
a73450036e32 Input: mcs_touchkey - use struct_size() in kzalloc()
fb5fc09cc803 Input: tca6416-keypad - use struct_size() in kzalloc()
8d008e64a2eb mISDN: hfcsusb: Use struct_size() in kzalloc()
4edff70494e4 scsi: aic7xxx: aic79xx: mark expected switch fall-through
f1b1dceedd7b scsi: bfa: bfa_ioc: Mark expected switch fall-throughs
d14e4cd45ac8 scsi: bfa: bfa_fcs_rport: Mark expected switch fall-throughs
8425811b8d95 scsi: bfa: bfa_fcs_lport: Mark expected switch fall-throughs
b9f57f5805cf scsi: esas2r: esas2r_init: mark expected switch fall-throughs
211d62a8ce68 scsi: st: mark expected switch fall-throughs
fc9ac87eabb2 scsi: qla4xxx: ql4_os: mark expected switch fall-through
d14eff1bc53e KVM: x86: Fix bit shifting in update_intel_pt_cfg
21face6f0d4d ARM: integrator: impd1: use struct_size() in devm_kzalloc()
1e11820f72b7 pinctrl: sirf: atlas7: use struct_size() in devm_kzalloc()
16f4372fd7a5 pinctrl: mcp23s08: use struct_size() in devm_kzalloc()
c2b8bd49d35a afs: Use struct_size() in kzalloc()
4f340efcb212 clk: zynqmp: Fix memory allocation in zynqmp_clk_setup
d4b9dd50076e qxl: Use struct_size() in kzalloc()
5bd5f66cf142 scsi: lpfc: lpfc_sli: Mark expected switch fall-throughs
12de280b36f0 scsi: smartpqi_init: fix boolean expression in pqi_device_remove_start
7a7b0fea6f84 IB/srp: Use struct_size() in kzalloc()
833954a4e34e serial: max310x: Use struct_size() in devm_kzalloc()
84f1c5c0174a sc16is7xx: Use struct_size() in devm_kzalloc()
6756f4c375db USB: core: urb: Use struct_size() in kmalloc()
b0407d820b65 hwmon: (occ) Fix potential integer overflow
e2477233145f ARM: s3c24xx: Fix boolean expressions in osiris_dvs_notify
5aad26a7eac5 IB/core: Use struct_size() in kzalloc()
02fc1848414e IB/usnic: Use struct_size() in kmalloc()
b5c61b968def IB/cm: Use struct_size() in kmalloc()
f87d8ad9233f tipc: fix memory leak in tipc_nl_compat_publ_dump
de1fa4f61be7 dmaengine: fsl-edma: use struct_size() in kzalloc()
d3d70373f6fe dmaengine: tegra-apb: Use struct_size() in devm_kzalloc()
edd3c3899996 dmaengine: qcom: bam_dma: use struct_size() in kzalloc()
55f53b9c1746 dmaengine: st_fdma: use struct_size() in kzalloc()
ed414d580310 dmaengine: dma-jz4780: Use struct_size() in devm_kzalloc()
5fde600537db dmaengine: bcm2835: Use struct_size() in kzalloc()
045ee2d0d075 staging: mt7621-dma: Use struct_size() in devm_kzalloc()
1d38b4e903d5 ASoC: xlnx: fix error handling in xlnx_formatter_pcm_probe
07fa6010ff93 cifs: suppress some implicit-fallthrough warnings
a3ac5817ffe8 can: af_can: Fix Spectre v1 vulnerability
a95386f0390a nfc: af_nfc: Fix Spectre v1 vulnerability
d686026b1e6e phonet: af_phonet: Fix Spectre v1 vulnerability
50d5258634ae net: core: Fix Spectre v1 vulnerability
d52c499b476b lightnvm: pblk: fix use-after-free bug
da7903092b88 scsi: isci: request: mark expected switch fall-through
87be32b3ad27 scsi: isci: remote_node_context: mark expected switch fall-throughs
4f09ac9d96ce scsi: isci: remote_device: Mark expected switch fall-throughs
1aba50b880e1 scsi: isci: phy: Mark expected switch fall-through
4c5765e48510 scsi: myrb: Mark expected switch fall-throughs
a8cc10e232f1 scsi: mpt3sas: mpt3sas_scsih: Mark expected switch fall-through
505b5240329b drm/ioctl: Fix Spectre v1 vulnerabilities
83ea00d6873f iwlwifi: mvm: d3: use struct_size() in kzalloc()
c23b2e6fc4ca KVM: arm/arm64: vgic: Fix off-by-one bug in vgic_get_irq()
5ae4f61f012a ALSA: emu10k1: Fix potential Spectre v1 vulnerabilities
0b84304ef5da ALSA: rme9652: Fix potential Spectre v1 vulnerability
69d2c86766da ip6mr: Fix potential Spectre v1 vulnerability
94ffb030b6d3 ALSA: pcm: Fix potential Spectre v1 vulnerability
4aea96f4237c ALSA: emux: Fix potential Spectre v1 vulnerabilities
5648451e30a0 ipv4: Fix potential Spectre v1 vulnerability
1ff2d8c43bc2 scsi: BusLogic: mark expected switch fall-through
9167f0dcc523 scsi: xen-scsifront: mark expected switch fall-through
74e716f2a9d8 scsi: megaraid_sas_fusion: Mark expected switch fall-through
8d07f7d0009c scsi: megaraid: megaraid_sas_base: Mark expected switch fall-through
76df1da36c3d scsi: libfc: fc_rport: Mark expected switch fall-through
5dfdb0893596 scsi: hpsa: mark expected switch fall-throughs
c121c57a45ec scsi: aacraid: Mark expected switch fall-through
8d4d5b346cfc scsi: aacraid: Mark expected switch fall-throughs
4ecd94b8e13b platform/x86: dell-laptop: Mark expected switch fall-throughs
aa1f0fa374ed parport: parport_pc: Mark expected switch fall-through
646558ff1643 kdb: kdb_support: mark expected switch fall-throughs
01cb37351baf kdb: kdb_keyboard: mark expected switch fall-throughs
9eb62f0e1bc7 kdb: kdb_main: refactor code in kdb_md_line
fee05f455ceb drivers/misc/sgi-gru: fix Spectre v1 vulnerability
f7d6cf6d0c7e mtd: cfi_cmdset_0020: Mark expected switch fall-throughs
98473f5acc00 mtd: block2mtd: mark expected switch fall-throughs
7cbbe1597e44 zd1201: mark expected switch fall-through
89e54fa4562e rtlwifi: rtl8821ae: phy: Mark expected switch fall-through
d22d2492a35d ray_cs: mark expected switch fall-throughs
641dd8068ecb rt2x00: rt61pci: mark expected switch fall-through
916e6bbcfcff rt2x00: rt2800lib: mark expected switch fall-throughs
10bb92217747 rt2x00: rt2500pci: mark expected switch fall-through
6eba8fd22352 rt2x00: rt2400pci: mark expected switch fall-through
63fdc952df36 mwifiex: Mark expected switch fall-through
38a0792d08e9 prism54: islpci_dev: mark expected switch fall-through
3d238b9d5048 prism54: isl_ioctl: mark expected switch fall-through
d22b8fadd08e prism54: isl_38xx: Mark expected switch fall-through
d56b26801e1d orinoco_usb: mark expected switch fall-through
af71f8fef45c iwlegacy: common: mark expected switch fall-throughs
e9904084dd1b iwlegacy: 4965-mac: mark expected switch fall-through
307b00c5e695 rtl8xxxu: Fix missing break in switch
e20c50cdca19 rtl8xxxu: Mark expected switch fall-throughs
657f60039792 drm/radeon/r300: Mark expected switch fall-throughs
fa2549800c84 drm/radeon/r420: mark expected switch fall-through
f458f9f43690 carl9170: tx: mark expected switch fall-throughs
003161445bc8 carl9170: rx: mark expected switch fall-through
6d9e1ecd1537 ath6kl: Mark expected switch fall-through
bf74fd75137d ath9k: hw: mark expected switch fall-through
f2a881055094 ath9k: ar9002_phy: mark expected switch fall-throughs
604e98670072 ath9k: ar5008_phy: mark expected switch fall-through
41d6f0d07d76 mtd: rawnand: fsmc: Fix unchecked return value in fsmc_read_page_hwecc
846429bc998f ntb: ntb_transport: Mark expected switch fall-throughs
1b7619828d0c NTB: ntb_hw_idt: replace IS_ERR_OR_NULL with regular NULL checks
3819ddec1f8c include/linux/signal.h: mark expected switch fall-throughs
89976005536c include/linux/compat.h: mark expected switch fall-throughs
0ac203cb1f03 nfsd: fix fall-through annotations
61855f021c3a mm/zsmalloc.c: fix fall-through annotation
d91dc172e34f skd: fix unchecked return values
f70556c8cae9 smb2: fix uninitialized variable bug in smb2_ioctl_query_info
7e5583fd7719 ubi: Mark expected switch fall-throughs
6acb47d1a318 phy: ocelot-serdes: fix out-of-bounds read
81fa7a69c217 dt-bindings: phy: Update SERDES_MAX to be SERDES_MAX + 1
cfb347979e71 power: max8925: mark expected switch fall-through
f4445bb93d82 scsi: hisi_sas: Fix NULL pointer dereference
82385b0d2d25 net: skbuff.h: Mark expected switch fall-throughs
47d20212aa1c net: phy: mscc: fix memory leak in vsc8574_config_pre_init
e519869af368 net: phy: mscc: fix signedness bug in vsc85xx_downshift_get
efa61c8cf295 ptp: fix Spectre v1 vulnerability
9ae24af36691 usb: gadget: storage: Fix Spectre v1 vulnerability
a37805098900 drm/bufs: Fix Spectre v1 vulnerability
6940d12b3b02 scsi: aic94xx: mark expected switch fall-throughs
902370519224 Input: xen-kbdfront - mark expected switch fall-through
5d25ff7a5448 scsi: ips: fix missing break in switch
a3671a4f973e RDMA/ucma: Fix Spectre v1 vulnerability
0295e39595e1 IB/ucm: Fix Spectre v1 vulnerability
c3e04915b867 rtc: m41t80: mark expected switch fall-through
03bf67817ec1 Input: atmel_mxt_ts - mark expected switch fall-through
15ee2992c07e Input: cyapa - mark expected switch fall-throughs
c65a0d84ee9c iio: dpot-dac: mark expected switch fall-through with text GCC expects.
a7ed5b3e7dca staging: comedi: tio: fix multiple missing break in switch bugs
7bfd82bff60e ath10k: remove unnecessary comparison of unsigned integer with < 0
9d9cdbf3f9ed ath10k: htt_rx: fix signedness bug in ath10k_update_per_peer_tx_stats
4fe81669df50 pinctrl: madera: Fix uninitialized variable bug in madera_mux_set_mux
74a07c0a59fa drm/nouveau/secboot/acr: fix memory leak
062f97a31435 isdn/gigaset/isocdata: mark expected switch fall-through
272a66173bbc isdn/gigaset: mark expected switch fall-throughs
97037597d670 video: fbdev: arcfb: mark expected switch fall-through
d2681cd81b05 mmc: meson-mx-sdio: mark expected switch fall-through
a5c83eb2bdc3 mmc: tifm_sd: Mark expected switch fall-through
b7dc10b64f61 sparc64: fix fall-through annotation
c4beb225f93a sparc32: fix fall-through annotation
5fc7c12ffa7f bnxt_en: Remove unnecessary unsigned integer comparison and initialize variable
2b9156129f8e gigaset: asyncdata: mark expected switch fall-throughs
74aa3586c599 ssb: chipcommon: fix fall-through annotation
fa295becc533 PCI / ACPI: Mark expected switch fall-through
2c1833767bd8 spi: pxa2xx: Rewrite switch code block in interrupt_transfer
4b03227a65dc regulator: axp20x: Mark expected switch fall-throughs
2cc543f5cd6d sctp: fix fall-through annotation
2e75b676c328 ALSA: intel8x0: Fix fall-through annotations
c24bfa8f21b5 spi: slave: Fix missing break in switch
fbed20280d91 mtd: rawnand: atmel: Fix potential NULL pointer dereference
3f60b03f7427 isdn/hisax: Fix fall-through annotation
fe1a10bab242 ALSA: sb8: Fix fall-through annotations
fb6360b1ef33 pktcdvd: fix fall-through annotation
7c968791f775 video/fbdev/stifb: Fix spelling mistake in fall-through annotation
2462080fe941 soc: mediatek: pwrap: use true and false for boolean values
431083441219 i2c: synquacer: fix fall-through annotation
1cafbb867c69 media: venus: helpers: use true and false for boolean values
b31bd669b45d misc: sgi-gru: fix fall-through annotations
b1fed3edc82a Smack: Mark expected switch fall-through
e97267cb4d1e tty: vt_ioctl: fix potential Spectre v1
17a0a1e5f6c4 PCI: mediatek: Fix unchecked return value
982e386379f0 ASoC: hisilicon: fix fall-through annotations
597d18325acd ASoC: es8328: Fix fall-through annotations
05e2ec3b00ed ALSA: atiixp: fix fall-through annotations
f91845da9fda pktgen: Fix fall-through annotation
310fc0513ea9 tg3: Fix fall-through annotations
78cf8c842c11 media: drxj: fix spelling mistake in fall-through annotations
de916736aaaa misc: hmc6352: fix potential Spectre v1
46feb6b495f7 switchtec: Fix Spectre v1 vulnerability
829682b3dba1 media: uvcvideo: Remove unnecessary NULL check before debugfs_remove_recursive
23feefda2239 usb: iowarrior: replace kmalloc with kmalloc_array
426d5a0f9733 9p: fix spelling mistake in fall-through annotation
49925f247016 wil6210: fix unsigned cid comparison with >= 0
40b5a0f8c6c7 mac80211: remove unnecessary NULL check
b034ed50a2bb HID: core: fix NULL pointer dereference
683a0e630cb4 dma-buf/udmabuf: Fix NULL pointer dereference in udmabuf_create
2f91eb6951d9 mtd: rawnand: atmel: use struct_size() in devm_kzalloc()
81592c69c9ed mtd: rawnand: jz4780: use struct_size() in devm_kzalloc()
2fc4aa59ab47 net: usbnet: mark expected switch fall-through
cf5652c962da orinoco_usb: fix spelling mistake in fall-through annotation
a8627cda7cff ipmi: Fix NULL pointer dereference in ssif_probe
e9a2310fb689 reset: hisilicon: fix potential NULL pointer dereference
681cd4a890e3 clk: qcom: clk-branch: Use true and false for boolean values
d290e096d2a5 pinctrl: lpc18xx: mark expected switch fall-throughs
29adeb4f954b drm/rockchip: Use struct_size() in devm_kzalloc()
450b6b9b1693 clk: npcm7xx: fix memory allocation
06ae8dc00433 ath10k: use struct_size() in kzalloc()
f62df676d7f1 memory: atmel-ebi: Use struct_size() in devm_kzalloc()
725e0e15f84b rtc: sun6i: Use struct_size() in kzalloc()
d49dbfade96d hwmon: (nct6775) Fix potential Spectre v1
06e3c29716d9 drm/sun4i: tcon-top: Use struct_size() in devm_kzalloc()
addb3ffbca66 Bluetooth: mediatek: Fix memory leak
b639186ffe91 futex: Mark expected switch fall-throughs
9ffa68f65416 iio: health: max30102: Mark expected switch fall-throughs
aa7d16bfa3bd platform/x86: acer-wmi: refactor function has_cap
1bf0572fe270 ubifs: use swap macro in swap_dirty_idx
4597b62f7a60 net: filter: mark expected switch fall-through
de5372da605d drm/i915/kvmgt: Fix potential Spectre v1
a2eed33dcdb7 ide: mark expected switch fall-throughs
062a585ec21e KVM: arm: Use true and false for boolean values
8a8a894ebbc2 wimax: usb-tx: mark expected switch fall-through
849063074a84 wimax: usb-fw: mark expected switch fall-through
d331e7589753 net: dp83640: Mark expected switch fall-throughs
6e45f2a59ffb f2fs: use true and false for boolean values
1a363b0d3bdc s390/qeth: use true and false for boolean values
a677a78325b3 nfsd: use true and false for boolean values
7b4d6da4bb6d nfsd: Mark expected switch fall-through
0a1c749dee4c block: paride: pd: mark expected switch fall-throughs
c7743c428111 ssb: driver_gige: use true and false for boolean values
f2cf0ef7c0ce ASoC: adav80x: mark expected switch fall-through
91c6e15efc17 ALSA: usb-audio: Mark expected switch fall-through
725097323bbc ALSA: mixart: Mark expected switch fall-through
10db5b7a2f44 pnfs: Use true and false for boolean values
01e03bdc745b NFS: Mark expected switch fall-throughs
1c02cbf7de0d i2c: designware-pcidrv: Mark expected switch fall-through
ee87a0ce2f91 i2c: amd8111: Mark expected switch fall-through
0c93c5ce1076 ALSA: opl3: Mark expected switch fall-through
17a4ed5545c5 Input: mark expected switch fall-throughs
6cad4e269e25 Input: raydium_i2c_ts - use true and false for boolean values
3c4d9137eefe arm64: alternative: Use true and false for boolean values
e38c2e11ebcc net: ethernet: ti: cpts: mark expected switch fall-through
681685a1ce06 net: tlan: Mark expected switch fall-through
5683a7a69720 net: sfc: falcon: mark expected switch fall-through
4e50ffcf1fb6 net: ethernet: sxgbe: mark expected switch fall-throughs
201e894570b1 qlge: mark expected switch fall-through
d19911ca0521 qlcnic: Mark expected switch fall-througs
b84ad65a75f3 qede: qede_fp: Mark expected switch fall-through
fd3da12dba0d netxen_nic: Mark expected switch fall-throughs
53a42286f29f qed: qed_dev: Mark expected switch fall-throughs
e77f02b812cc net/mlx5e: Mark expected switch fall-throughs
9d81e6a3f643 vxge: Mark expected switch fall-throughs
76df93b17795 igbvf: netdev: Mark expected switch fall-through
eed05a094a0d igb: e1000_phy: Mark expected switch fall-through
b9e0e23f918b igb: e1000_82575: Mark expected switch fall-through
7e9660ff6ff1 igb_main: Mark expected switch fall-throughs
c8581f2bb5dd net/mlx4/en_rx: Mark expected switch fall-throughs
49a9776fe5d6 net/mlx4/mcg: Mark expected switch fall-throughs
f7c3ca2da464 i40e_txrx: mark expected switch fall-through
1e84374f1c3c i40e_main: mark expected switch fall-through
be44b3afa982 net: hns3: Mark expected switch fall-through
1e14ef19fb49 net: hns: Mark expected switch fall-through
40f99eda21bd be2net: Mark expected switch fall-through
8fc85c25c1f3 net: tulip: de4x5: mark expected switch fall-throughs
10c7666e70d9 net: tulip_core: mark expected switch fall-through
6da5ae5f00e8 net: thunderx: mark expected switch fall-through
92072679a803 cxgb3/l2t: Mark expected switch fall-through
d135955f550d cxgb4/t4_hw: mark expected switch fall-throughs
20e4fb12b146 cxgb4/l2t: Mark expected switch fall-through
19aa45d44700 liquidio: mark expected switch fall-through
b4bc39a3f666 net: macb: Mark expected switch fall-through
bc171e87a7e2 bnx2x: Mark expected switch fall-thoughs
8ea345050604 alteon: acenic: mark expected switch fall-through
497e0049b6c8 8390: axnet_cs: Mark expected switch fall-through
544c05a60aef vfio: Mark expected switch fall-throughs
bf06bad958c4 xen/biomerge: Use true and false for boolean values
f87c30c96cd9 xen-blkfront: use true and false for boolean values
ad0eaee6195d ASoC: wm8994: Fix missing break in switch
bee7d3c9f89a ASoC: wm8903: use true and false for boolean values
e1ec62b147c2 ASoC: da9055: use true and false for boolean values
380ae4ec4203 ASoC: wm5100-tables: use true and false for boolean values
1752a35acd8e ASoC: da7213: use true and false for boolean values
bc94c8884e5a ASoC: twl6040: use true and false for boolean values
965afd3c1dba ASoC: da7219: use true and false for boolean values
eb086306bc6b ASoC: wm8996: use true and false for boolean values
c34c4515286f ASoC: cs4270: use true and false for boolean values
064ee5a37015 ASoC: wm8990: use true and false for boolean values
10754bfc0512 ASoC: tda7419: use true and false for boolean values
508e8641f89c ASoC: rt5631: use true and false for boolean values
038541dae968 ASoC: max9850: use true and false for boolean values
82837ad5bda7 PM / hibernate: Mark expected switch fall-through
ef0075280cfe ALSA: echoaudio: Mark expected switch fall-throughs
9d5a289a86a1 ALSA: emu10k1: Mark expected switch fall-throughs
ac69c2f578bf ALSA: mixart: Mark expected switch fall-through
b633d4405bb2 virtio-net: mark expected switch fall-throughs
7964410fcf13 fs: dcache: Use true and false for boolean values
7a92719356ca genwqe: card_base: Use true and false for boolean values
eb2caeb88c18 ALSA: seq_oss: Mark expected switch fall-through
2f3b94e539a4 ALSA: seq: Mark expected switch fall-through
5019027a566d ASoC: samsung: i2s: Mark expected switch fall-through
a773c3b6be18 ASoC: omap-dmic: Mark expected switch fall-throughs
16bbeb2b43c3 ASoC: fsl_esai: Mark expected switch fall-through
1a12d5dc7dd1 ASoC: core: mark expected switch fall-through
85c81941d503 ASoC: omap-mcpdm: Mark expected switch fall-throughs
3b7c88fcc287 ASoC: davinci-i2s: mark expected switch fall-through
8530ebf1079c ASoC: smd845: fix memory leak
3512a18cbd8d mailbox: xgene-slimpro: Fix potential NULL pointer dereference
13a01635823c ALSA: es18xx: mark expected switch fall-through
734be97b967c ALSA: opti9xx: mark expected switch fall-throughs
3e313f34720e ALSA: opti92x: mark expected switch fall-throughs
a9fe47e5e96b ALSA: galaxy: Mark expected switch fall-throughs
d3e2a25bcd0b xen-netback: use true and false for boolean values
99972f171bba aoe: mark expected switch fall-through
2cea1542859b ASoC: wm8994: Mark expected switch fall-through
7a2235ef5078 ASoC: wm9081: Mark expected switch fall-through
af5d1d5d4ba7 ASoC: wm8995: Mark expected switch fall-through
a9531ab15111 ASoC: wm8962: Mark expected switch fall-through
42ef3c94ff6e ASoC: wm8996: Mark expected switch fall-through
da41787b9f31 ASoC: wm8904: Mark expected switch fall-through
3eb7dbc6d844 ASoC: wm8960: Mark expected switch fall-through
85e7e77079f3 ASoC: wm8955: Mark expected switch fall-through
43a26bd026da ASoC: rt5677: Mark expected switch fall-through
065dcc270af6 ASoC: rt5640: Mark expected switch fall-through
9a73f6a235c2 ASoC: wm8961: Mark expected switch fall-through
44ec3ec01fb7 ftrace: Use true and false for boolean values in ops_references_rec()
d5e77fca87e6 ALSA: usb: Mark expected switch fall-through
96d395020e87 net/mlx5e: Fix uninitialized variable
5a6cd13d4fae ALSA: pcm: Mark expected switch fall-through
ddf74e79a540 drm/amdgpu/pm: Fix potential Spectre v1
aff24cd1f531 drm/msm: Replace PTR_RET with PTR_ERR_OR_ZERO
ae1c696a480c ASoC: sirf: Fix potential NULL pointer dereference
62bbdd997467 ext4: use swap macro in mext_page_double_lock
a47890899379 crypto: rmd320 - use swap macro in rmd320_transform
d75f482eafac crypto: rmd256 - use swap macro in rmd256_transform
b094e64fbd88 media: dib0700: add code comment
f2047d6044e5 media: dvb-bt8xx: remove duplicate code
f805ed84895a can: peak_usb: mark expected switch fall-throughs
2ed9db3074fc net: sched: cls_api: fix dead code in switch
dc66fe43b7eb rds: send: Fix dead code in rds_sendmsg
502defbb476b fsi: master-ast-cf: Fix memory leak
c5b974bee9d2 iio: sca3000: Fix missing return in switch
12382ad98ca0 video: fbdev: mark expected switch fall-throughs
2968b5265f00 omapfb: Mark expected switch fall-throughs
810180fc8e63 fbdev: fbmem: mark expected switch fall-through
249090f9016b nvme-rdma: mark expected switch fall-through
cc44ba91166b power: supply: max77693_charger: fix unintentional fall-through
37bab356f86b power: supply: mark expected switch fall-throughs
baa2d2b17ee9 net: sched: use PTR_ERR_OR_ZERO macro in tcf_block_cb_register
eecd6857709e tls: Fix copy-paste error in tls_device_reencrypt
3fd8093b41e7 crypto: dh - fix memory leak
cd0ed39dc9e8 s390/tape: replace PTR_RET with PTR_ERR_OR_ZERO
9fa6a659ca98 s390/hypfs: Replace PTR_RET with PTR_ERR_OR_ZERO
757853ea1975 s390/dasd: replace PTR_RET with PTR_ERR_OR_ZERO
9c705206d0b5 s390/ap_bus: replace PTR_RET with PTR_ERR_OR_ZERO
9ba8376ce1e2 ptp: fix missing break in switch
676bcfece19f net: cxgb3_main: fix potential Spectre v1
0e714d27786c vfio/pci: Fix potential Spectre v1
e146471f588e net: mvpp2: debugfs: fix incorrect bitwise operator
e4e542a683c1 xfs: use swap macro in xfs_dir2_leafn_rebalance
897992b7e350 xfs_bmap_util: use swap macro
1d5bebbafc73 xfs_attr_leaf: use swap macro in xfs_attr3_leaf_rebalance
108019a7e6a3 drm/pl111: Use 64-bit arithmetic instead of 32-bit
7373c2a99abf ALSA: emu8000: Use swap macro in snd_emu8000_sample_new
e2d2f240497c ALSA: emu10k1_patch: Use swap macro in snd_emu10k1_sample_new
ae85467cccba net: usb: hso: use swap macro in hso_kick_transmit
399476bd40a5 pinctrl: baytrail: Mark expected switch fall-throughs
e12fa73c97a4 pinctrl: mt7622: mark expected switch fall-through
2061594c612c mmc: sdhci-xenon: mark expected switch fall-through
34bcfdac8c92 parport: ieee1284: mark expected switch fall-throughs
884b031b288b lightnvm: pblk: mark expected switch fall-through
d6be72ee2c77 crypto: chtls - use 64-bit arithmetic instead of 32-bit
858c5dfc8c33 backlight: adp8860: Mark expected switch fall-through
d6488ac19aab PCI: Mark fall-through switch cases before enabling -Wimplicit-fallthrough
fc21ae8927f3 scsi: mptfusion: mark expected switch fall-throughs
31e1c59796c8 drm/ttm: use swap macro in ttm_bo_handle_move_mem
01abdcc5288f phy: qcom-usb-hs: Mark expected switch fall-through
572d8fda26fe char: amd64-agp: Use 64-bit arithmetic instead of 32-bit
d893ff86034f block/loop: mark expected switch fall-through
d769a992966b drbd: mark expected switch fall-throughs
4f65245f2d17 HID: hiddev: fix potential Spectre v1
38fce264b12b dmaengine: nbpfaxi: Mark expected switch fall-through
ffb32432457c hwmon: Mark expected switch fall-throughs
e161ef7c3c37 iio: mma8452: Mark expected switch fall-through
82d65f9d5528 iio:imu:adis: Mark expected switch fall-throughs
bcde98fcf9cf misc: mic: mark expected switch fall-through
f1a54cddbbc3 sgi-xp: xpc_partition: mark expected switch fall-throughs
0c2ccd8cd143 eeprom: at25: mark expected switch fall-throughs
5faecb016288 /dev/mem: Mark expected switch fall-through
6f3472a993e7 drm/amd/display/dc/dce: Fix multiple potential integer overflows
f7ddff54d0a0 ASoC: nau8824: use 64-bit arithmetic instead of 32-bit
f0d759f038dc drm/i915: Mark expected switch fall-throughs
2cc0608e42ac net: core: filter: mark expected switch fall-through
3cc87d03992f net: decnet: dn_nsp_in: mark expected switch fall-through
c53e0c787e67 tipc: mark expected switch fall-throughs
b999a7a9e72b ASoC: fsl_spdif: Use 64-bit arithmetic instead of 32-bit
04614fe46f31 wlcore: Fix memory leak in wlcore_cmd_wait_for_event_or_timeout
da13ed1d80fe ASoC: nau8825: use 64-bit arithmetic instead of 32-bit
d287c5024361 isdn: mark expected switch fall-throughs
e0431de301cb ASoC: pxa-ssp: mark expected switch fall-through
c18a9c096683 net: stmmac_tc: use 64-bit arithmetic instead of 32-bit
25b22e353c1f USB: mark expected switch fall-throughs
169d3606dccf USB: musb: mark expected switch fall-throughs
ced9e191501e atm: zatm: Fix potential Spectre v1
9ca78674eb6a net: usb: Mark expected switch fall-throughs
83607344d667 bnx2x: Mark expected switch fall-throughs
9b10000f4921 tg3: Mark expected switch fall-throughs
47aa7861b9bf mac80211: fix potential null pointer dereference
5ae79cf18dc1 drm/gma500: Fix compile warning
80c18ba11a7a drm/gma500: Fix potential NULL pointer dereference
08ae88f8104f tracing: Use swap macro in update_max_tr
80dc12cdfb9e spi: spi-fsl-dspi: Fix copy-paste error in dspi_probe
c1e3f64f8738 qtnfmac: fix NULL pointer dereference
fe78627d4304 drm/amd/display: fix type of variable
12b67b0d6bcb ath9k: mark expected switch fall-throughs
4de30c906ef0 ath6kl: mark expected switch fall-throughs
aae28cefc279 ath5k: mark expected switch fall-through
f1d270ae10ff ath10k: htt_tx: mark expected switch fall-throughs
299eafee39a2 IB/mlx5: Fix memory leak in mlx5_ib_create_flow
06895b1627fe rtlwifi: remove duplicate code
666cc438f369 mwifiex: mark expected switch fall-throughs
b3b2d5b624f2 media: au8522: remove duplicate code
23d6aef74da8 kernel/sys.c: fix potential Spectre v1 issue
a0d6ec88090d usbip: vhci_sysfs: fix potential Spectre v1
7bf5b70befd7 drm/nouveau/secboot: remove VLA usage
a78622932c27 bpf: sockmap, fix double-free
0e4364560361 bpf: sockmap, fix uninitialized variable
acf784bd0ce2 net: atm: Fix potential Spectre v1
2be147f7459d atm: zatm: Fix potential Spectre v1
2b7db29b7919 media: imx-media-csi: Fix inconsistent IS_ERR and PTR_ERR
ad109ba13786 staging: wilc1000: fix infinite loop and out-of-bounds access
3f1109d13244 mmc: sdhci-cadence: fix logically and structurally dead code
